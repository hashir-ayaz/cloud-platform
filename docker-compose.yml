
services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: flaskuser
      POSTGRES_PASSWORD: flaskpassword
      POSTGRES_DB: flaskdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - flask_network

  frontend:
    build:
      context: ./frontend-cloud-platform
      dockerfile: Dockerfile
    container_name: frontend_container
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`hashirayaz.site`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=4173"
      - "traefik.http.middlewares.compress.compress=true"
    networks:
      - flask_network
    environment:
      - VITE_AUTH_SERVICE_URL=${VITE_AUTH_SERVICE_URL}
      - VITE_CONTAINER_SERVICE_URL=${VITE_CONTAINER_SERVICE_URL}
    depends_on:
      - auth_service

  auth_service:
    build:
      context: ./auth-api-cloud-platform
      dockerfile: Dockerfile
    container_name: auth_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`hashirayaz.site`) && PathPrefix(`/api/auth/`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=myresolver"
      - "traefik.http.services.auth.loadbalancer.server.port=5000"
      - "traefik.http.middlewares.compress.compress=true"
    environment:
      - DATABASE_URL=postgresql://flaskuser:flaskpassword@db:5432/flaskdb
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - flask_network
    depends_on:
      - db

  container_service:
    build:
      context: ./container-service-cloud-platform
      dockerfile: Dockerfile
    container_name: container_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.container.rule=Host(`hashirayaz.site`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.container.entrypoints=websecure"
      - "traefik.http.routers.container.tls.certresolver=myresolver"
      - "traefik.http.services.container.loadbalancer.server.port=5001"
      - "traefik.http.middlewares.compress.compress=true"
    environment:
      - DATABASE_URL=postgresql://flaskuser:flaskpassword@db:5432/flaskdb
      - SECRET_KEY=${SECRET_KEY}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    networks:
      - flask_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db

  traefik:
    image: traefik:v2.10
    container_name: traefik_proxy
    restart: always
    ports:
      - "80:80"  # HTTP
      - "443:443" # HTTPS
    command:
      - "--api.dashboard=true" # Enable Traefik dashboard
      - "--providers.docker=true" # Enable Docker provider
      - "--providers.docker.exposedbydefault=false" # Only route containers with traefik.enable=true
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=hashirayaz@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - flask_network

volumes:
  db_data:
  letsencrypt:

networks:
  flask_network:
    driver: bridge
